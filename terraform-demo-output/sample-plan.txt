$ terraform plan

Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  + aws_instance.web
      id:                                   <computed>
      ami:                                  "ami-cfe4b2b0"
      arn:                                  <computed>
      associate_public_ip_address:          "true"
      availability_zone:                    <computed>
      cpu_core_count:                       <computed>
      cpu_threads_per_core:                 <computed>
      ebs_block_device.#:                   <computed>
      ephemeral_block_device.#:             <computed>
      get_password_data:                    "false"
      instance_state:                       <computed>
      instance_type:                        "t2.micro"
      ipv6_address_count:                   <computed>
      ipv6_addresses.#:                     <computed>
      key_name:                             "deployer-key"
      network_interface.#:                  <computed>
      network_interface_id:                 <computed>
      password_data:                        <computed>
      placement_group:                      <computed>
      primary_network_interface_id:         <computed>
      private_dns:                          <computed>
      private_ip:                           <computed>
      public_dns:                           <computed>
      public_ip:                            <computed>
      root_block_device.#:                  <computed>
      security_groups.#:                    "1"
      security_groups.2200183879:           "allow_all"
      source_dest_check:                    "true"
      subnet_id:                            <computed>
      tags.%:                               "1"
      tags.Name:                            "EC2 Docker NGINX with Terraform Demo"
      tenancy:                              <computed>
      volume_tags.%:                        <computed>
      vpc_security_group_ids.#:             <computed>

  + aws_key_pair.deployer
      id:                                   <computed>
      fingerprint:                          <computed>
      key_name:                             "deployer-key"
      public_key:                           "***MANUALLY_REMOVED_BY_NICK***"

  + aws_security_group.allow_all
      id:                                   <computed>
      arn:                                  <computed>
      description:                          "Allow all inbound traffic"
      egress.#:                             "1"
      egress.482069346.cidr_blocks.#:       "1"
      egress.482069346.cidr_blocks.0:       "0.0.0.0/0"
      egress.482069346.description:         ""
      egress.482069346.from_port:           "0"
      egress.482069346.ipv6_cidr_blocks.#:  "0"
      egress.482069346.prefix_list_ids.#:   "0"
      egress.482069346.protocol:            "-1"
      egress.482069346.security_groups.#:   "0"
      egress.482069346.self:                "false"
      egress.482069346.to_port:             "0"
      ingress.#:                            "1"
      ingress.482069346.cidr_blocks.#:      "1"
      ingress.482069346.cidr_blocks.0:      "0.0.0.0/0"
      ingress.482069346.description:        ""
      ingress.482069346.from_port:          "0"
      ingress.482069346.ipv6_cidr_blocks.#: "0"
      ingress.482069346.protocol:           "-1"
      ingress.482069346.security_groups.#:  "0"
      ingress.482069346.self:               "false"
      ingress.482069346.to_port:            "0"
      name:                                 "allow_all"
      owner_id:                             <computed>
      revoke_rules_on_delete:               "false"
      vpc_id:                               <computed>


Plan: 3 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.